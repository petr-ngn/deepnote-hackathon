name: Poetry Pylint Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  pylint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies with Poetry
      run: |
        poetry install --no-root

    - name: Run pylint and extract score
      id: pylint
      run: |
        FILES=$(find src -type f -name "*.py" ! -name "__init__.py")
        if [ -n "$FILES" ]; then
          SCORE=$(poetry run pylint --fail-under=0 --score=y --output-format=text $FILES | tee pylint-output.txt | grep 'Your code has been rated at' | awk '{print $7}' | cut -d'/' -f1)
          echo "Pylint score: $SCORE"
          echo "{\"label\": \"pylint\", \"message\": \"$SCORE\", \"color\": \"blue\"}" > pylint-badge.json
        else
          echo "No Python files to lint."
          echo "{\"label\": \"pylint\", \"message\": \"n/a\", \"color\": \"lightgrey\"}" > pylint-badge.json
        fi

    - name: Push badge to badges branch
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        git clone --single-branch --branch badges https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} badge-repo
        cd badge-repo

        cp ../pylint-badge.json pylint-badge.json

        git add pylint-badge.json
        git commit -m "Update pylint badge" || echo "No changes to commit"
        git push origin badges

